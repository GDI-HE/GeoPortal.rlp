# Generated by Django 2.1.3 on 2019-02-26 10:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Gui',
            fields=[
                ('gui_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('gui_name', models.CharField(max_length=50)),
                ('gui_description', models.CharField(max_length=255)),
                ('gui_public', models.IntegerField()),
            ],
            options={
                'db_table': 'gui',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MbGroup',
            fields=[
                ('mb_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('mb_group_name', models.CharField(max_length=50)),
                ('mb_group_owner', models.IntegerField(blank=True, null=True)),
                ('mb_group_description', models.CharField(max_length=255)),
                ('mb_group_title', models.CharField(max_length=255)),
                ('mb_group_ext_id', models.BigIntegerField(blank=True, null=True)),
                ('mb_group_address', models.CharField(max_length=255)),
                ('mb_group_postcode', models.CharField(max_length=255)),
                ('mb_group_city', models.CharField(max_length=255)),
                ('mb_group_stateorprovince', models.CharField(max_length=255)),
                ('mb_group_country', models.CharField(max_length=255)),
                ('mb_group_voicetelephone', models.CharField(max_length=255)),
                ('mb_group_facsimiletelephone', models.CharField(max_length=255)),
                ('mb_group_email', models.CharField(max_length=255)),
                ('mb_group_logo_path', models.TextField(blank=True, null=True)),
                ('mb_group_homepage', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_group_admin_code', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp_create', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('mb_group_address_location', models.TextField(blank=True, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('mb_group_ckan_uuid', models.UUIDField(blank=True, null=True)),
                ('mb_group_ckan_api_key', models.UUIDField(blank=True, null=True)),
                ('mb_group_csw_catalogues', models.TextField(blank=True, null=True)),
                ('mb_group_ckan_catalogues', models.TextField(blank=True, null=True)),
                ('mb_group_registry_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('export2ckan', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mb_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MbProxyLog',
            fields=[
                ('proxy_log_timestamp', models.DateTimeField(blank=True, null=True)),
                ('fkey_wms_id', models.IntegerField()),
                ('fkey_mb_user_id', models.IntegerField()),
                ('request', models.CharField(blank=True, max_length=4096, null=True)),
                ('pixel', models.BigIntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('got_result', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_mime_type', models.CharField(blank=True, max_length=50, null=True)),
                ('layer_featuretype_list', models.TextField(blank=True, null=True)),
                ('request_type', models.CharField(blank=True, max_length=15, null=True)),
                ('log_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fkey_wfs_id', models.IntegerField(blank=True, null=True)),
                ('features', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mb_proxy_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MbRole',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(blank=True, max_length=50, null=True)),
                ('role_description', models.CharField(blank=True, max_length=255, null=True)),
                ('role_exclude_auth', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mb_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MbUser',
            fields=[
                ('mb_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('mb_user_name', models.CharField(max_length=50, unique=True)),
                ('mb_user_password', models.CharField(max_length=50)),
                ('mb_user_owner', models.IntegerField()),
                ('mb_user_description', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_login_count', models.IntegerField(blank=True, null=True)),
                ('mb_user_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('mb_user_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('mb_user_department', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_resolution', models.IntegerField(blank=True, null=True)),
                ('mb_user_organisation_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_position_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_phone1', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_facsimile', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_delivery_point', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_city', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_postal_code', models.IntegerField(blank=True, null=True)),
                ('mb_user_country', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_online_resource', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_realname', models.CharField(blank=True, max_length=100, null=True)),
                ('mb_user_street', models.CharField(blank=True, max_length=100, null=True)),
                ('mb_user_housenumber', models.CharField(blank=True, max_length=50, null=True)),
                ('mb_user_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('mb_user_for_attention_of', models.CharField(blank=True, max_length=100, null=True)),
                ('mb_user_valid_from', models.DateField(blank=True, null=True)),
                ('mb_user_valid_to', models.DateField(blank=True, null=True)),
                ('mb_user_password_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('mb_user_digest', models.TextField(blank=True, null=True)),
                ('mb_user_firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('mb_user_academictitle', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp_create', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('mb_user_newsletter', models.BooleanField(blank=True, null=True)),
                ('mb_user_allow_survey', models.BooleanField(blank=True, null=True)),
                ('mb_user_aldigest', models.TextField(blank=True, null=True)),
                ('mb_user_glossar', models.CharField(blank=True, max_length=5, null=True)),
                ('mb_user_textsize', models.CharField(blank=True, max_length=14, null=True)),
                ('mb_user_last_login_date', models.DateField(blank=True, null=True)),
                ('mb_user_spatial_suggest', models.CharField(blank=True, max_length=5, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('salt', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mb_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wfs',
            fields=[
                ('wfs_id', models.AutoField(primary_key=True, serialize=False)),
                ('wfs_version', models.CharField(max_length=50)),
                ('wfs_name', models.CharField(blank=True, max_length=255, null=True)),
                ('wfs_title', models.CharField(max_length=255)),
                ('wfs_abstract', models.TextField(blank=True, null=True)),
                ('wfs_getcapabilities', models.CharField(max_length=4096)),
                ('wfs_describefeaturetype', models.CharField(blank=True, max_length=4096, null=True)),
                ('wfs_getfeature', models.CharField(blank=True, max_length=4096, null=True)),
                ('wfs_transaction', models.CharField(blank=True, max_length=4096, null=True)),
                ('wfs_owsproxy', models.CharField(blank=True, max_length=50, null=True)),
                ('wfs_getcapabilities_doc', models.TextField(blank=True, null=True)),
                ('wfs_upload_url', models.CharField(blank=True, max_length=4096, null=True)),
                ('fees', models.TextField(blank=True, null=True)),
                ('accessconstraints', models.TextField(blank=True, null=True)),
                ('individualname', models.CharField(blank=True, max_length=255, null=True)),
                ('positionname', models.CharField(blank=True, max_length=255, null=True)),
                ('providername', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('deliverypoint', models.CharField(blank=True, max_length=255, null=True)),
                ('administrativearea', models.CharField(blank=True, max_length=255, null=True)),
                ('postalcode', models.CharField(blank=True, max_length=255, null=True)),
                ('voice', models.CharField(blank=True, max_length=255, null=True)),
                ('facsimile', models.CharField(blank=True, max_length=255, null=True)),
                ('electronicmailaddress', models.CharField(blank=True, max_length=255, null=True)),
                ('wfs_mb_getcapabilities_doc', models.TextField(blank=True, null=True)),
                ('wfs_owner', models.IntegerField(blank=True, null=True)),
                ('wfs_timestamp', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('wfs_timestamp_create', models.IntegerField(blank=True, null=True)),
                ('wfs_network_access', models.IntegerField(blank=True, null=True)),
                ('fkey_mb_group_id', models.IntegerField(blank=True, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('wfs_max_features', models.IntegerField(blank=True, null=True)),
                ('inspire_annual_requests', models.BigIntegerField(blank=True, null=True)),
                ('wfs_username', models.CharField(blank=True, max_length=255, null=True)),
                ('wfs_password', models.CharField(blank=True, max_length=255, null=True)),
                ('wfs_auth_type', models.CharField(blank=True, max_length=255, null=True)),
                ('wfs_license_source_note', models.TextField(blank=True, null=True)),
                ('wfs_proxylog', models.IntegerField(blank=True, null=True)),
                ('wfs_pricevolume', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wfs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wms',
            fields=[
                ('wms_id', models.AutoField(primary_key=True, serialize=False)),
                ('wms_version', models.CharField(max_length=50)),
                ('wms_title', models.CharField(max_length=255)),
                ('wms_abstract', models.TextField(blank=True, null=True)),
                ('wms_getcapabilities', models.CharField(max_length=4096)),
                ('wms_getmap', models.CharField(max_length=4096)),
                ('wms_getfeatureinfo', models.CharField(max_length=4096)),
                ('wms_getlegendurl', models.CharField(blank=True, max_length=4096, null=True)),
                ('wms_filter', models.CharField(blank=True, max_length=255, null=True)),
                ('wms_getcapabilities_doc', models.TextField(blank=True, null=True)),
                ('wms_owsproxy', models.CharField(blank=True, max_length=50, null=True)),
                ('wms_upload_url', models.CharField(blank=True, max_length=4096, null=True)),
                ('fees', models.TextField(blank=True, null=True)),
                ('accessconstraints', models.TextField(blank=True, null=True)),
                ('contactperson', models.CharField(blank=True, max_length=255, null=True)),
                ('contactposition', models.CharField(blank=True, max_length=255, null=True)),
                ('contactorganization', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('stateorprovince', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('contactvoicetelephone', models.CharField(blank=True, max_length=255, null=True)),
                ('contactfacsimiletelephone', models.CharField(blank=True, max_length=255, null=True)),
                ('contactelectronicmailaddress', models.CharField(blank=True, max_length=255, null=True)),
                ('wms_mb_getcapabilities_doc', models.TextField(blank=True, null=True)),
                ('wms_owner', models.IntegerField(blank=True, null=True)),
                ('wms_timestamp', models.IntegerField(blank=True, null=True)),
                ('wms_supportsld', models.BooleanField(blank=True, null=True)),
                ('wms_userlayer', models.BooleanField(blank=True, null=True)),
                ('wms_userstyle', models.BooleanField(blank=True, null=True)),
                ('wms_remotewfs', models.BooleanField(blank=True, null=True)),
                ('wms_proxylog', models.IntegerField(blank=True, null=True)),
                ('wms_pricevolume', models.IntegerField(blank=True, null=True)),
                ('wms_username', models.CharField(max_length=255)),
                ('wms_password', models.CharField(max_length=255)),
                ('wms_auth_type', models.CharField(max_length=255)),
                ('wms_timestamp_create', models.IntegerField(blank=True, null=True)),
                ('wms_network_access', models.IntegerField(blank=True, null=True)),
                ('fkey_mb_group_id', models.IntegerField(blank=True, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('wms_max_imagesize', models.IntegerField(blank=True, null=True)),
                ('wms_max_imagesize_x', models.IntegerField(blank=True, null=True)),
                ('wms_max_imagesize_y', models.IntegerField(blank=True, null=True)),
                ('inspire_annual_requests', models.BigIntegerField(blank=True, null=True)),
                ('wms_proxy_log_fi', models.IntegerField(blank=True, null=True)),
                ('wms_price_fi', models.IntegerField(blank=True, null=True)),
                ('wms_license_source_note', models.TextField(blank=True, null=True)),
                ('wms_bequeath_licence_info', models.IntegerField(blank=True, null=True)),
                ('wms_bequeath_contact_info', models.IntegerField(blank=True, null=True)),
                ('wms_proxy_exchange_external_urls', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Navigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('page_identifier', models.CharField(max_length=100, unique=True)),
                ('icon_name', models.CharField(blank=True, max_length=200)),
                ('position', models.IntegerField(unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='useroperations.Navigation')),
            ],
        ),
        migrations.CreateModel(
            name='GuiMbUser',
            fields=[
                ('fkey_gui', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='useroperations.Gui')),
                ('mb_user_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'gui_mb_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MbUserMbGroup',
            fields=[
                ('fkey_mb_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='useroperations.MbUser')),
            ],
            options={
                'db_table': 'mb_user_mb_group',
                'managed': False,
            },
        ),
    ]
